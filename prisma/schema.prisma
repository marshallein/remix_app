// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  email     String   @unique
  password  String
  name      String
  Order     Order[]
  createdAt DateTime @default(now())
  Cart      Cart?
}

model Product {
  id              Int        @id @default(autoincrement())
  productName     String
  sku             String
  price           Float
  salePercent     Float?     @default(0)
  description     String
  tags            Tags?
  promotion       Promotion?
  AvailableColor  String[]
  mainImageString String
  imageSet        String[]
  Stock           Stock[]

  CartItems    CartItem[]
  OrderItems   OrderItems[]
  Collection   Collection?  @relation(fields: [collectionId], references: [id])
  collectionId Int?
}

model Collection {
  id             Int       @id @default(autoincrement())
  collectionCode String
  collectionName String
  description    String
  products       Product[]
}

// need to fix this
model Stock {
  stockId       Int     @id @default(autoincrement())
  stockQuantity Int
  product       Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId     Int
  stockName     String
  stockAddress  String
}

model Cart {
  id        String     @id @default(cuid())
  User      User       @relation(fields: [userId], references: [id])
  userId    Int        @unique
  CartItems CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id        String  @id @default(cuid())
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  cartId    String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId Int
  quantity  Int

  createdAt DateTime @default(now())
}

model Order {
  id         Int          @id @default(autoincrement())
  orderName  String       @unique
  user       User         @relation(fields: [userId], references: [id])
  userId     Int
  totalPrice Float
  OrderItems OrderItems[]
}

model OrderItems {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  price     Float
  createdAt DateTime @default(now())
}

enum Tags {
  Modern
  Traditional
  Long_Dress
  Five_Panel
}

enum Promotion {
  Sale
  Best_Seller
}
