// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  name      String
  Cart      Cart[]
  Order     Order[]
  createdAt DateTime @default(now())
}

model Product {
  id             Int          @id @default(autoincrement())
  productName    String
  price          Float
  description    String
  AvailableColor String[]
  imageString    String?
  Stock          Stock[]
  CartItems      CartItems[]
  OrderItems     OrderItems[]
}

// need to fix this
model Stock {
  stockId       Int     @id @default(autoincrement())
  stockQuantity Int
  product       Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId     Int
  stockName     String
  stockAddress  String
}

model Cart {
  id        Int         @id
  user      User        @relation(fields: [userId], references: [id])
  userId    Int         @unique
  CartItems CartItems[]
}

model CartItems {
  id        Int      @id @default(autoincrement())
  quantity  Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    Int
  createdAt DateTime @default(now())
}

model Order {
  id         Int          @id @default(autoincrement())
  orderName  String       @unique
  user       User         @relation(fields: [userId], references: [id])
  userId     Int
  totalPrice Float
  OrderItems OrderItems[]
}

model OrderItems {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  price     Float
  createdAt DateTime @default(now())
}
